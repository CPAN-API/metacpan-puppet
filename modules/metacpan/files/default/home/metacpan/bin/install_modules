#!/bin/bash

# root/sudo
if ! [[ "`id -u`" == "0" ]]; then
  echo 'run with sudo'
  exit 1
fi

# get the right perl
source /home/metacpan/.metacpanrc

perl=`which perl`
perlbin=${perl%/*}

PERLBREW_ROOT="${PERLBREW_ROOT:-/usr/local/perlbrew}"

dir="`pwd`"

function su_cpanm () {
  user="$1"; shift;
  /bin/su - -c "umask 022; cd '$dir'; $perl ${perlbin}/cpanm $*" "$user"
}

# if trying to installdeps we need to get the list first (too much su-ing)
if echo "$*" | grep -qE '^(--installdeps)?[[:space:]]+\.$'; then
  # TODO: --show-deps may be deprecated so we should find another way to do this

  # Ensure we check deps as the same user that owns the directory
  # in case it needs to write files (like a Makefile).
  # On the server this will be 'metacpan' but on the vagrant vm it's a shared
  # folder so it will be 'vagrant'.
  dir_owner="`stat -c '%U' .`"

  # Use -l to quiet large warning about not having permission for a system
  # install (since we're executing this as an unprivileged user).
  # We're not actually going to install anything, but this is better than
  # doing '2> /dev/null' which hides any useful debugging info.
  cpanm_args='-l /tmp/perl5'

  # set positional parameters to the list of modules
  eval set -- `su_cpanm "${dir_owner:-metacpan}" $cpanm_args --showdeps .`

  # Check that we determined a list of modules to install.
  if [[ $# -eq 0 ]]; then
    echo 'Nothing to install' 1>&2
    exit;
  fi
fi

# prompt for confirmation
$perl -e '$|=1; $,="\n"; print qq{  install into $^X ($^V) ?\n}, @ARGV, qq{\n [yes/no]: }; <STDIN> =~ /^yes$/i or exit 1;' -- "$@" || exit 1

cpan_log=${PERLBREW_ROOT}/cpanm-install.log
cpan_user=perlbrew

chown -R $cpan_user:$cpan_user "$PERLBREW_ROOT"

# install as $cpan_user
# NOTE: cannot do --installdeps here because the perlbrew user doesn't have perms in metacpan dir
su_cpanm "$cpan_user" "$@" 2>&1 | tee -a $cpan_log
