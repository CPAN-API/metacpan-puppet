#!/bin/sh

#
# FIXME: this needs to be converted to debian init style
#
#
### BEGIN INIT INFO
# Provides:          <%= filename %>
# Required-Start:    $ALL
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: <%= desc %>
### END INIT INFO

# Check for missing binaries (stale symlinks should not happen)
# Note: Special treatment of stop for LSB conformance
export PATH=<%= perlbin %>:$PATH
RRR_BIN=<%= perlbin %>/rrr-client
PERL=<%= perlbin %>/perl
TARGET=/home/metacpan/CPAN
PID_FILE=/var/run/<%= filename %>.pid
test -x $RRR_BIN || { echo "$RRR_BIN not installed"; 
	if [ "$1" = "stop" ]; then exit 0;
	else exit 5; fi; }


# Source LSB init functions
. /lib/lsb/init-functions

case "$1" in
    start)
	echo -n "Starting metacpan-rrr "
	## Start daemon with startproc(8). If this fails
	## the return value is set appropriately by startproc.
        start-stop-daemon --start --background -c metacpan -m -p $PID_FILE --startas $RRR_BIN -- --source cpan-rsync.perl.org::CPAN/RECENT.recent --target $TARGET --skip-deletes
	;;
    stop)
	echo -n "Shutting down metacpan-rrr "
	## Stop daemon with killproc(8) and if this fails
	## killproc sets the return value according to LSB.

        start-stop-daemon -K -p $PID_FILE
	# Remember status and be verbose
	;;
    restart)
	## Stop the service and regardless of whether it was
	## running or not, start it again.
	$0 stop
	$0 start

	# Remember status and be quiet
	;;
    *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
	;;
esac
