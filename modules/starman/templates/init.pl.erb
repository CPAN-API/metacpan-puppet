#!<%= @perlbin ||= scope.lookupvar('::perlbin') %>/perl
<%# FIXME: ^ perlbin needs to come from somewhere else.  globals are bad, m'kay. %>
<%# vim: set syn=perl.eruby ts=4 sts=4 sw=4 et sta: %>
# Generated by puppet.

### BEGIN INIT INFO
# Provides:          <%= @service %>
# Required-Start:    $all
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts <%= @service %>
# Description:       Starts <%= @service %>
### END INIT INFO`

use strict;
use warnings;

use Daemon::Control;
use File::Path 2.06 ();    # core

my $name = '<%= @service %>';
my $service = "<%= @service.gsub(%r/-/, '.') %>";

my $user = '<%= @user %>';
my $home = '<%= @root %>';
my %dirs = (
    pid => "$home/var/run",
    log => "$home/var/log",
);
my $carton    = '<%= @perlbin %>/carton';
my $workers   = <%= @workers %>;
my $plack_env = '<%= @plack_env %>';

my $carton_dir = "/home/${user}/carton";
my $carton_path = "${carton_dir}/${service}";

# TODO: Should we use the ./bin/carton wrapper instead of setting this here?
$ENV{PERL_CARTON_PATH} = $carton_path;

my @program_args = (
    'exec', "${carton_path}/bin/plackup",
    '--port'    => <%= @port %>,
    '--workers' => $workers,
    '-E'        => $plack_env,
    '-Ilib',
    '-a'  => 'app.psgi',
    '-s', => 'Starman',
);

# Puppet should be doing this with symlinks
#File::Path::make_path( values %dirs );

# Notes on unused args
# scan_name: seems to be just 'starman master' (not useful)
# stdout_file: always seems to be just empty

my $args = {
    directory    => $home,
    fork         => 2,
    group        => $user,
    init_config  => '<%= @env_file %>',
    lsb_desc     => "Starts $name",
    lsb_sdesc    => "Starts $name",
    name         => $name,
    pid_file     => "$dirs{pid}/$name.pid",
    program      => $carton,
    program_args => \@program_args,
    stderr_file  => "$dirs{log}/starman_error.log",
    user         => $user,
};

exit Daemon::Control->new($args)->run;
